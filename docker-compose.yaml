version: '3.8'

services:
<<<<<<< HEAD
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - 8080:80
    depends_on:
      - api
  api:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/todolist/.env
  migrations:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .env:/todolist/.env
    command: python manage.py migrate
=======
>>>>>>> origin/main
  db:
    image: postgres:15.1-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
<<<<<<< HEAD
    networks:
      - default
=======
>>>>>>> origin/main
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 3s
      timeout: 3s
      retries: 3

volumes:
<<<<<<< HEAD
  pg_data:
  frontend:
=======
  pg_data:
>>>>>>> origin/main
